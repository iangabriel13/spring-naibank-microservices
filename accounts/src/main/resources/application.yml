server:
  port: 8080

spring:
  application:
    name: accounts
  profiles:
    active: prod
  datasource:
    url: jdbc:h2:mem:testdb
    driverClassName: org.h2.Driver
    username: sa
    password: ''
  h2:
    console:
      enabled: true
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: update
    show-sql: true
  cloud:
    openfeign:
      circuitbreaker:
        enabled: true
    function:
      definition: updateCommunication
    stream:
      bindings:
        updateCommunication-in-0:
          destination: communication-sent
          group: ${spring.application.name}
        sendCommunication-out-0:
          destination: send-communication
  config:
    import: optional:configserver:http://localhost:8071/
#  datasource:
#    url: jdbc:mysql://localhost:3306/accountsdb
#    username: root
#    password: admin123
#  jpa:
#    show-sql: true
#  sql:
#    init:
#      mode: always
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest
    connection-timeout: 10s

management:
  endpoints:
    web:
      exposure:
        include: '*'
  health:
    readinessstate:
      enabled: true
    livenessstate:
      enabled: true
  endpoint:
    shutdown:
      access: unrestricted
    health:
      probes:
        enabled: true
  info:
    env:
      enabled: true
  metrics:
    tags:
      application: ${spring.application.name}

eureka:
  instance:
    prefer-ip-address: true
  client:
    fetchRegistry: true
    registerWithEureka: true
    serviceUrl:
      defaultZone: http://localhost:8070/eureka/

info:
  app:
    name: accounts
    description: Nai Bank Accounts Application
    version: 1.0.0

logging:
  level:
    com:
      naitech:
        accounts: DEBUG
  pattern:
    level: "%5p [${spring.application.name},%X{trace_id},%X{span_id}]"

resilience4j.circuitbreaker:
  configs:
    default:
      sliding-window-size: 10
      permitted-number-of-calls-in-half-open-state: 2
      failure-rate-threshold: 50
      wait-duration-in-open-state: 10000

resilience4j.retry:
  configs:
    default:
      max-attempts: 3
      wait-duration: 500
      enable-exponential-backoff: true
      exponential-backoff-multiplier: 2
      ignore-exceptions:
        - java.lang.NullPointerException
      retry-exceptions:
        - java.util.concurrent.TimeoutException

resilience4j.ratelimiter:
  configs:
    default:
      timeout-duration: 1000
      limit-refresh-period: 5000
      limit-for-period: 1